type Alembic_version @pgTable(name: "alembic_version") {
    id: ID! @unique @pgColumn(name: "version_num")
}

type Anime_appearances @pgTable(name: "anime_appearances") {
    anime: Animes @pgRelation(column: "anime_id")
    character: Characters @pgRelation(column: "character_id")
}

type Animes @pgTable(name: "animes") {
    id: UUID! @unique
    anilist_id: Int
    anime_appearances: [Anime_appearances!]!
    dialogues: [Dialogues!]!
    downloads: [Downloads!]!
    episodes: [Episodes!]!
    mal_id: Int
    name: String
    raw_name: String!
    seasons: [Seasons!]!
    thumbnail_url: String
}

type Characters @pgTable(name: "characters") {
    id: UUID! @unique
    anilist_id: Int
    anime_appearances: [Anime_appearances!]!
    certainty: Int
    dialogues: [Dialogues!]!
    episode_appearances: [Episode_appearances!]!
    name: String
    raw_name: String
    season_appearances: [Season_appearances!]!
    thumbnail_url: String
}

type Dialogues @pgTable(name: "dialogues") {
    id: UUID! @unique
    anime: Animes @pgRelation(column: "anime_id")
    character: Characters @pgRelation(column: "character_id")
    end: Int
    episode: Episodes @pgRelation(column: "episode_id")
    order: Int!
    season: Seasons @pgRelation(column: "season_id")
    start: Int!
    text: String
}

type Downloads @pgTable(name: "downloads") {
    id: UUID! @unique
    anime: Animes @pgRelation(column: "anime_id")
    date: DateTime
    episodes: [Episodes!]!
    file_name: String!
    link_url: String
}

type Episode_appearances @pgTable(name: "episode_appearances") {
    character: Characters @pgRelation(column: "character_id")
    episode: Episodes @pgRelation(column: "episode_id")
}

type Episodes @pgTable(name: "episodes") {
    id: UUID! @unique
    anime: Animes @pgRelation(column: "anime_id")
    dialogues: [Dialogues!]!
    download: Downloads @pgRelation(column: "download_id")
    episode_appearances: [Episode_appearances!]!
    episode_number: String
    language: String
    length: Int
    season: Seasons @pgRelation(column: "season_id")
    sub_group: String
}

type Season_appearances @pgTable(name: "season_appearances") {
    character: Characters @pgRelation(column: "character_id")
    season: Seasons @pgRelation(column: "season_id")
}

type Seasons @pgTable(name: "seasons") {
    id: UUID! @unique
    anime: Animes @pgRelation(column: "anime_id")
    dialogues: [Dialogues!]!
    episodes: [Episodes!]!
    name: String
    raw_name: String!
    season_appearances: [Season_appearances!]!
}
